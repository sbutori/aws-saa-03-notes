# Adrian Cantrill's AWS Certified Solutions Architect - Associate (SAA-C03) Course


# INTRODUCTION & SCENARIO

# Public Introduction - No Notes

# Course Resources

Course has GitHub Repository: https://github.com/acantril/aws-sa-associate-saac03
Walked through how to d/l Git to PC and clone repo for access.
To update to latest version: "git pull"

Walked through and recommended VS Studio Code install

# Site Tools & Features

## Quick tour of the learning platform
 Products page, Slack channel, free GitHub repo: "Labs" link, mini projects in the GH repo, "More" tab for tech support

# AWS Exams / Certifications

## How to get started
Don't start with the Cloud Practitioner Foundational Cert, start with Associate level SA (Solutions Architect). The content overlaps.
After you finish SA Associate do the Role Based certs, then Specialty certs later. Get SA Professional prior to Specialties certs
- In Associate level, start with 1. SA before SysOps/Developer 2. then Developer Associate 3. then SysOps Associate (Hardest exam of the 3).
- In Professional level, tests are way harder. Longer questions, more questions. 1. Professional SA, 2. DevOps Pro exam

# Scenario - Animals4life

Animal rescue/awareness Org. Global company, 100 staff, 100 remote staff, etc etc. Small data-center is old, and data should be migrated out. 
Badly implemented AWS trial in SYD Region. Isolated Azure/GCP Pilots. All staff uses this infrastructure. Company runs lean but will get new tech
if it helps business. 
- On Premise: 192.168.10.0/24, Class C
- AWS Pilot: 10.0.0.0/16, Class B
- Azure Pilot: 172.31.0.0/16, Class B
Major offices NY, Seattle, London all use Head Office services for data
Field workers on laptop, 3g/4g/ satellite for email/files, chat/planning, research data

## Problems: Hardware failing, datacenter decommissioned in 18months, so business needs to migrate out. New investment needed, not sure if on premise, azure, aws, etc. Previous AWS/Azure attempts didn't pan out. Distance to datacenter is sub-optimal for much of company. Lean/appropriately sized, but trouble with peak traffic. IT team sucks at cloud.

## Ideal Outcomes: 
- Fast performance for all field workers
- Able to deploy into new regions quickly when required
- Low cost and scalable base infrastructure, cost close to 0 as possible while meeting reqs
- Agility - new marketing campaigns, social and progressive applications (IOT, Big Data, etc). Wants to make use of emerging technologies
- Automation - low base staffing costs

## Pay attention to which areas need more information, so you can ask the right questions.

# Connect with other students and your instructor - techstudyslack.com. Make sure you meet people in the industry--50% of jobs aren't posted anywhere.
- No better way to learn tech than help others

# Course upgrades: If you've already bought a course but want a bundle, you'll just have to pay the difference.


# COURSE FUNDAMENTALS AND AWS ACCOUNTS

## AWS Accounts
AWS Accounts are not only required to use AWS services, they are also one of the most important tools available to a solutions architect.
Many students confuse accounts with users inside the accounts. An org may use one account or many thousands. Bigger orgs generally use multiple AWS accounts.

At a high level, AWS Account is a container for Identities (users) (which you log in with) and Resources (which you provision).

When creating an AWS account need need to provide:
- Unique email address (for EACH AWS account); this creates a special type of identity: the account root user
- Provide a payment method, generally a Credit Card

Root Users can only access their own accounts. Initially, it is also the only user. Root user has full control over the one specific AWS account and any resources inside it. Root user CANNOT be restricted in any way. Protect the root username and password.

### Billing 
Credit Card used to open account is the Account Payment Method. Any billable usage is charged to this CC. "Pay-as-you-go" platform. There is a free tier which we use in this course.

### Security
You can create restricted identities/users using Identity and Access Management (IAM): Users, Groups, and Roles can also be created and given FULL or LIMITED permissions. All of these ID's start off with NO access/permissions in the account. The IAM service is Account specific. Cross-account permissions are a possibility, as well (to be covered later).

### Boundary of the Account
AWS accounts are really good at containing what's inside the accounts; bad employee or bad actor, etc. Having separate AWS accounts for different uses (DEV, PROD, etc), you can limit overall damage.

By default, all access to an AWS account is denied except for the root user.

# TIP: Create new accounts for the course, don't use existing AWS accounts. The longer an AWS account exists, the more potential for configuratoin errors.


## DEMO: Creating the GENERAL AWS Account: https://learn.cantrill.io/courses/1820301/lectures/41301459
1. Create General AWS account (*MANAGEMENT). This account's root user will be what we log in with (root user = account specific).
2. Add root user MFA for security.
3. Create a Budget to protect against unintended costs.
4. Create an IAM user, IAMADMIN. Give permissions. Then we'll use this ID for the course.
5. Create a second accound, Production. Will also have IAMADMIN user.

## TIP: using one email for multiple accounts with Gmail. AWS accounts should be viewed as disposable, create as many as you need. Create a new account for each course. 
### TIP Example: email is catguy@gmail.com. You can use + sign in email address to create 'unique' email addresses. Ex: catguy+AWSAccount1@gmail.com, catguy+AWSAccount2@gmail.com, etc etc. This is called a Dynamic Alias.

Choose free tier AWS account after providing all account setup info (unique email, CC, verification.

Complete the prompted steps. Account will now be created.

### Account
- Always a good idea to update Alternate Contacts
- IAM User and Role Access to Billing Information, click "Edit", check Activate IAM Access
-- If this IAM box isn't checked, even an IAM ID will full admin permissions wouldn't be able to access the billing console

### Multi-Factor Authentication (MFA)
- Username and PW is step one
- MFA makes things more secure with OTP

Definition: Factors - Different pieces of evidence which prove identity

4 Common Factors:
- Knowledge (username / PW)
- Possession (debit card, MFA device, MFA app, etc)
- Inherent - Something you are: fingerprint, biometrics, etc.
- Location - Physical location, which network (corp or wifi)

More factors means more security and harder to fake. Also means less convenient. Trying to strike a balance between security and convenience.

With AWS: 1. first, username and PW 2. MFA OTP (physical MFA or virtual via app ie. Google Authenticator)

To Activate MFA for a specific ID, like Root user, you activate MFA for that user. AWS generates secret key and other associated information (user it links to, service). All this information use all this information together to generate a QR code. Scan code using MFA app

### Securing an AWS Account
Attach MFA device to Root user.

In AWS Console... Account > Security Credentials to IAM console > locate "Assign MFA Device", follow steps.
- Log Out and test MFA login.

# REMEMBER: When setting up a new AWS account / Identity, you need to add another entry within your OTP application.

By end of this course, you should have a total of 4 virtual MFA's configured.

### Creating a Budget
Understand Free Tier and set up a budget.

AWS Free Tier: https://aws.amazon.com/free/
- Details allocations of free resources

Spend Details: Account > Billing Dashboard > click "Bills" (for spend details)

Billing Notification Preferences: Click "Billing Preferences" > check all boxes within "Invoice delivery preferences" and "Alert preferences" and Update

Create Cost Budgets: click "Budgets" > select Use a Template > select an appropriate option based on monthly spend budget (select Zero spend budget) > Budget Name "Monthly Zero Budget", enter Email Recipients for alerts ([EMAIL]+trainingawsgeneral@gmail.com) > click "Create Budget"
-- Budgets allow you to monitor spend and configure alerts when hitting spend targets

### Creating the Production Account
After creating General AWS account, we now need to create multiple AWS accounts and connect them with an AWS Organization.

#### Create Production AWS Account
Steps:
1. First, decide on email address to use [EMAIL]+trainingawsproduction1@gmail.com
2. Credit Card
3. Support Plan
4. Secure AWS account with MFA to Root user of Production Account
5. Billing Preferences, check the boxes, adding email address for alerts
6. Create budget
7. Enable IAM User & Role Access to Billing (in Accounts)
8. Optional: Update alternate contacts in Account

### IAM (Identity and Access Management) Basics
